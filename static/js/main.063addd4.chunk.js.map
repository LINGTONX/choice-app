{"version":3,"sources":["components/Options.js","App.js","index.js"],"names":["Options","number","className","placeholder","App","props","addOption","setState","option","state","length","addAnswer","input","document","querySelectorAll","inputArrays","question","shift","value","answerOptions","handleAskAgain","ul","getElementById","children","ulList","i","classList","remove","randomNumber","Math","trunc","random","add","path","exact","id","this","map","opt","onClick","to","Component","ReactDOM","render","StrictMode"],"mappings":"yRAYgBA,EATC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,sBAAKC,UAAU,MAAf,UACI,gCAAQD,IACR,uBAAOE,YAAY,gB,sBCIVC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,UAAY,WACV,EAAKC,SAAS,CAACC,OAAO,GAAD,mBAAK,EAAKC,MAAMD,QAAhB,WAA2B,EAAKC,MAAMD,OAAOE,OAAS,QAX1D,EAanBC,UAAY,WACX,IAAMC,EAAQC,SAASC,iBAAiB,SAClCC,EAAW,YAAOH,GAClBI,EAAWD,EAAYE,QAE5B,EAAKV,SAAS,CAACS,SAASA,EAASE,MAAOC,cAAc,YAAIJ,MAlBzC,EAoBnBK,eAAgB,WAGd,IAFA,IAAMC,EAAKR,SAASS,eAAe,cAAcC,SAC3CC,EAASH,EAAGX,OACTe,EAAI,EAAGA,EAAID,EAAQC,IAC1BJ,EAAGI,GAAGC,UAAUC,OAAO,UAEzB,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,SAASP,GAC9C,EAAKjB,SAAS,CAACqB,aAAaA,IAC5B,IAAK,IAAIH,EAAI,EAAGA,EAAID,EAAQC,IACtBA,IAAM,EAAKhB,MAAMmB,cACnBP,EAAGI,GAAGC,UAAUM,IAAI,WA3BxB,EAAKvB,MAAQ,CACVD,OAAQ,CAAC,IAAI,KACbQ,SAAS,GACTG,cAAc,GACdS,aAAc,GAPA,E,0CAmCnB,WACE,OACE,cAAC,IAAD,UACI,gCACJ,sBAAK1B,UAAY,eAAjB,UACI,qBAAKA,UAAW,OAAhB,wBACA,qBAAKA,UAAY,OAAjB,+CAEJ,eAAC,IAAD,CAAO+B,KAAK,IAAIC,OAAK,EAArB,UACA,sBAAKhC,UAAU,gBAAf,UACE,8CACA,uBAAOC,YAAY,2BAIvB,gCACA,6CACE,qBAAKgC,GAAG,YAAR,SACKC,KAAK3B,MAAMD,OAAO6B,KAAI,SAACC,EAAKb,GAC3B,OAAO,cAAC,EAAD,CAASxB,OAAQwB,EAAI,YAOlC,sBAAKvB,UAAU,UAAf,UACE,wBAAQqC,QAASH,KAAK9B,UAAtB,qBACA,cAAC,IAAD,CAAMkC,GAAI,cAAV,SAAwB,wBAAQD,QAASH,KAAKzB,UAAtB,4BAG1B,cAAC,IAAD,CAAOsB,KAAK,cAAZ,SACE,sBAAK/B,UAAU,eAAf,UACE,6BAAKkC,KAAK3B,MAAMO,WAGhB,oBAAImB,GAAG,aAAajC,UAAU,eAA9B,SACGkC,KAAK3B,MAAMU,cAAckB,KAAI,SAACzB,GAE7B,OAAQ,6BAAKA,EAAMM,aAQvB,sBAAKhB,UAAU,UAAf,UACE,wBAAQqC,QAASH,KAAKhB,eAAgBlB,UAAU,QAAhD,uBAEA,cAAC,IAAD,CAAMsC,GAAI,IAAV,SAAc,wBAAQtC,UAAU,SAAlB,2CAEd,cAAC,IAAD,CAAMsC,GAAG,IAAT,SAAa,wBAAQtC,UAAU,SAAlB,2D,GAxFQuC,aCNjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASS,eAAe,W","file":"static/js/main.063addd4.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./options.css\"\r\n\r\n const Options = ({number}) => {\r\n    return (\r\n        <div className=\"opt\">\r\n            <label>{number}</label>\r\n            <input placeholder=\"Answers\"></input>\r\n        </div>\r\n    )\r\n\r\n}\r\n export default Options","import React, { Component } from 'react'\nimport Options from './components/Options'\nimport \"./App.css\"\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       option: [\"1\",\"2\"],\n       question:\"\",\n       answerOptions:[],\n       randomNumber: 1\n    }\n  }\n  addOption = () => {\n    this.setState({option:[...this.state.option, `${this.state.option.length + 1}`]})\n  }\n  addAnswer = () =>{\n   const input = document.querySelectorAll('input')\n   const inputArrays = [...input]\n   const question = inputArrays.shift();\n   const optionArray = inputArrays\n    this.setState({question:question.value, answerOptions:[...inputArrays]})\n  }\n  handleAskAgain= () =>{\n    const ul = document.getElementById(\"predict-ul\").children\n    const ulList = ul.length\n    for (let i = 0; i < ulList; i++){\n      ul[i].classList.remove(\"active\")\n    }\n    const randomNumber = Math.trunc(Math.random()*ulList)\n    this.setState({randomNumber:randomNumber})\n    for (let i = 0; i < ulList; i++){\n      if (i === this.state.randomNumber){\n        ul[i].classList.add(\"active\")\n      }\n    }\n    // console.log(ul.length);\n  }\n  render() {\n    return (\n      <Router>\n          <div>\n      <div className = \"logo-wrapper\">\n          <div className= \"logo\"> GixChoice</div>\n          <div className = \"logo\">Your Decisions making machine.</div>\n    </div>\n      <Route path=\"/\" exact>\n      <div className=\"input-Wrapper\">\n        <label>Question:</label>\n        <input placeholder=\"Enter your Question\"></input>\n        \n    </div>\n\n    <div>\n    <label>Options:</label>\n      <div id=\"app-state\"> \n          {this.state.option.map((opt, i) => {\n            return <Options number={i + 1}/>\n            \n          })}\n      </div>\n      \n    </div>\n\n      <div className=\"opt-ans\">\n        <button onClick={this.addOption} >Options</button>\n        <Link to =\"/prediction\"><button onClick={this.addAnswer}>Answer</button></Link>\n      </div>\n      </Route>\n      <Route path=\"/prediction\">\n        <div className=\"predict-page\">\n          <h1>{this.state.question}</h1>\n\n          \n          <ul id=\"predict-ul\" className=\"predict-list\">\n            {this.state.answerOptions.map((input) =>\n              {\n              return  <li>{input.value}</li> \n                \n              }\n              )}\n          </ul>\n\n          \n          \n          <div className=\"btn-ans\">\n            <button onClick={this.handleAskAgain} className=\"btnAA\">Ask Again</button>\n\n            <Link to= \"/\"><button className=\"btnARQ\">Ask Another Random Question</button></Link>\n\n            <Link to=\"/\"><button className=\"btnGRA\">Get Another Random Answer </button></Link>\n            \n          </div>\n        </div>\n      </Route>\n    </div>\n      </Router>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}